{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst isCtrl = e => e.metaKey || e.ctrlKey; // https://keycode.info\n\n\nexport const useKeyBindings = (initialKeyBindings = {}, eventListener = \"keydown\") => {\n  const {\n    0: keyBindings\n  } = useState(initialKeyBindings);\n  useEffect(() => {\n    document.addEventListener(eventListener, event => {\n      const {\n        code\n      } = event;\n      const keyBinding = keyBindings[code];\n      if (keyBinding === undefined) return;\n      const condition = keyBinding.ctrl ? isCtrl(event) : true;\n      if (!condition) return;\n      event.preventDefault();\n      keyBinding.fn(event);\n    }, false);\n    return () => Object.keys(keyBindings).forEach(keyBinding => document.removeEventListener(eventListener, keyBindings[keyBinding]));\n  }, []);\n};","map":{"version":3,"sources":["/Users/nikivi/src/orgs/learn-anything/learn-anything/app/src/lib/key.js"],"names":["useState","useEffect","isCtrl","e","metaKey","ctrlKey","useKeyBindings","initialKeyBindings","eventListener","keyBindings","document","addEventListener","event","code","keyBinding","undefined","condition","ctrl","preventDefault","fn","Object","keys","forEach","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,MAAM,GAAIC,CAAD,IAAOA,CAAC,CAACC,OAAF,IAAaD,CAAC,CAACE,OAArC,C,CAEA;;;AACA,OAAO,MAAMC,cAAc,GAAG,CAC5BC,kBAAkB,GAAG,EADO,EAE5BC,aAAa,GAAG,SAFY,KAGzB;AACH,QAAM;AAAA,OAACC;AAAD,MAAgBT,QAAQ,CAACO,kBAAD,CAA9B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACC,gBAAT,CACEH,aADF,EAEGI,KAAD,IAAW;AACT,YAAM;AAAEC,QAAAA;AAAF,UAAWD,KAAjB;AACA,YAAME,UAAU,GAAGL,WAAW,CAACI,IAAD,CAA9B;AACA,UAAIC,UAAU,KAAKC,SAAnB,EAA8B;AAC9B,YAAMC,SAAS,GAAGF,UAAU,CAACG,IAAX,GAAkBf,MAAM,CAACU,KAAD,CAAxB,GAAkC,IAApD;AACA,UAAI,CAACI,SAAL,EAAgB;AAChBJ,MAAAA,KAAK,CAACM,cAAN;AACAJ,MAAAA,UAAU,CAACK,EAAX,CAAcP,KAAd;AACD,KAVH,EAWE,KAXF;AAcA,WAAO,MACLQ,MAAM,CAACC,IAAP,CAAYZ,WAAZ,EAAyBa,OAAzB,CAAkCR,UAAD,IAC/BJ,QAAQ,CAACa,mBAAT,CAA6Bf,aAA7B,EAA4CC,WAAW,CAACK,UAAD,CAAvD,CADF,CADF;AAID,GAnBQ,EAmBN,EAnBM,CAAT;AAoBD,CA1BM","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst isCtrl = (e) => e.metaKey || e.ctrlKey\n\n// https://keycode.info\nexport const useKeyBindings = (\n  initialKeyBindings = {},\n  eventListener = \"keydown\"\n) => {\n  const [keyBindings] = useState(initialKeyBindings)\n\n  useEffect(() => {\n    document.addEventListener(\n      eventListener,\n      (event) => {\n        const { code } = event\n        const keyBinding = keyBindings[code]\n        if (keyBinding === undefined) return\n        const condition = keyBinding.ctrl ? isCtrl(event) : true\n        if (!condition) return\n        event.preventDefault()\n        keyBinding.fn(event)\n      },\n      false\n    )\n\n    return () =>\n      Object.keys(keyBindings).forEach((keyBinding) =>\n        document.removeEventListener(eventListener, keyBindings[keyBinding])\n      )\n  }, [])\n}\n"]},"metadata":{},"sourceType":"module"}