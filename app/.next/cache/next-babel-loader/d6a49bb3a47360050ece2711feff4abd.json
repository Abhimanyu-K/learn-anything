{"ast":null,"code":"var _jsxFileName = \"/Users/nikivi/src/orgs/learn-anything/learn-anything/app/src/components/link.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"urql\";\nimport { deleteLinkMutation } from \"../lib/mutations\";\nimport { Bookmark } from \"./icons\";\nimport { Button, Stack } from \"@chakra-ui/core\";\nconst linkQuery = gql`\n  query($id: uuid!) {\n    links_by_pk(id: $id) {\n      name\n      comment\n      url\n    }\n  }\n`;\n\nconst Link = ({\n  id\n}) => {\n  var _result$data;\n\n  const [result] = useQuery({\n    query: linkQuery,\n    variables: {\n      id\n    }\n  });\n  const link = result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.links_by_pk; // TODO: Grab state from user query\n\n  const {\n    0: saved,\n    1: setSaved\n  } = useState(false);\n  const [removeLinkResult, removeLink] = useMutation(deleteLinkMutation);\n  return __jsx(Stack, {\n    marginBottom: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    href: link.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, link.name), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flex: 1,\n      justifyContent: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: e => removeLink({\n      id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Delete\"))), __jsx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, link.comment), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      marginTop: \"var(--small-gap)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    onClick: e => setSaved(!saved),\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(Bookmark, {\n    fill: `${saved ? \"currentColor\" : \"none\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), __jsx(\"span\", {\n    style: {\n      fontStyle: \"italic\",\n      color: \"var(--gray)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, link.url.split(\"/\")[2])));\n};\n\nexport default Link;","map":{"version":3,"sources":["/Users/nikivi/src/orgs/learn-anything/learn-anything/app/src/components/link.tsx"],"names":["React","useState","gql","useQuery","useMutation","deleteLinkMutation","Bookmark","Button","Stack","linkQuery","Link","id","result","query","variables","link","data","links_by_pk","saved","setSaved","removeLinkResult","removeLink","display","url","name","flex","justifyContent","e","comment","marginTop","cursor","fontStyle","color","split"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,MAAtC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AAEA,MAAMC,SAAS,GAAGP,GAAI;;;;;;;;CAAtB;;AAUA,MAAMQ,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAA;;AACvB,QAAM,CAACC,MAAD,IAAWT,QAAQ,CAAC;AACxBU,IAAAA,KAAK,EAAEJ,SADiB;AAExBK,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF;AAFa,GAAD,CAAzB;AAIA,QAAMI,IAAI,GAAGH,MAAH,aAAGA,MAAH,uCAAGA,MAAM,CAAEI,IAAX,iDAAG,aAAcC,WAA3B,CALuB,CAOvB;;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBlB,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAM,CAACmB,gBAAD,EAAmBC,UAAnB,IAAiCjB,WAAW,CAACC,kBAAD,CAAlD;AAEA,SACE,MAAC,KAAD;AAAO,IAAA,YAAY,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEiB,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAEP,IAAI,CAACQ,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBR,IAAI,CAACS,IAAzB,CADF,EAGE;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,OAAO,EAAE,MADJ;AAELG,MAAAA,IAAI,EAAE,CAFD;AAGLC,MAAAA,cAAc,EAAE;AAHX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAGC,CAAD,IAAON,UAAU,CAAC;AAAEV,MAAAA;AAAF,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAHF,CADF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaI,IAAI,CAACa,OAAlB,CAdF,EAeE;AAAK,IAAA,KAAK,EAAE;AAAEN,MAAAA,OAAO,EAAE,MAAX;AAAmBO,MAAAA,SAAS,EAAE;AAA9B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,OAAO,EAAGF,CAAD,IAAOR,QAAQ,CAAC,CAACD,KAAF,CAA9B;AAAwC,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAG,GAAEZ,KAAK,GAAG,cAAH,GAAoB,MAAO,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKE;AAAM,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,IAAI,CAACQ,GAAL,CAASU,KAAT,CAAe,GAAf,EAAoB,CAApB,CADH,CALF,CAfF,CADF;AA2BD,CAvCD;;AAyCA,eAAevB,IAAf","sourcesContent":["import React, { useState } from \"react\"\nimport gql from \"graphql-tag\"\nimport { useQuery, useMutation } from \"urql\"\nimport { deleteLinkMutation } from \"../lib/mutations\"\nimport { Bookmark } from \"./icons\"\nimport { Button, Stack } from \"@chakra-ui/core\"\n\nconst linkQuery = gql`\n  query($id: uuid!) {\n    links_by_pk(id: $id) {\n      name\n      comment\n      url\n    }\n  }\n`\n\nconst Link = ({ id }) => {\n  const [result] = useQuery({\n    query: linkQuery,\n    variables: { id },\n  })\n  const link = result?.data?.links_by_pk\n\n  // TODO: Grab state from user query\n  const [saved, setSaved] = useState(false)\n\n  const [removeLinkResult, removeLink] = useMutation(deleteLinkMutation)\n\n  return (\n    <Stack marginBottom=\"4px\">\n      <div style={{ display: \"flex\" }}>\n        <a href={link.url}>{link.name}</a>\n        {/* TODO: Only show for users with correct permissions */}\n        <div\n          style={{\n            display: \"flex\",\n            flex: 1,\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <Button onClick={(e) => removeLink({ id })}>Delete</Button>\n        </div>\n      </div>\n      <blockquote>{link.comment}</blockquote>\n      <div style={{ display: \"flex\", marginTop: \"var(--small-gap)\" }}>\n        <span onClick={(e) => setSaved(!saved)} style={{ cursor: \"pointer\" }}>\n          <Bookmark fill={`${saved ? \"currentColor\" : \"none\"}`} />\n        </span>\n        {/* {` / `} */}\n        <span style={{ fontStyle: \"italic\", color: \"var(--gray)\" }}>\n          {link.url.split(\"/\")[2]}\n        </span>\n      </div>\n    </Stack>\n  )\n}\n\nexport default Link\n"]},"metadata":{},"sourceType":"module"}