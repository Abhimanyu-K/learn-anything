{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nvar isCtrl = function isCtrl(e) {\n  return e.metaKey || e.ctrlKey;\n}; // https://keycode.info\n\n\nexport var useKeyBindings = function useKeyBindings() {\n  _s();\n\n  var initialKeyBindings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var eventListener = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"keydown\";\n\n  var _useState = useState(initialKeyBindings),\n      keyBindings = _useState[0];\n\n  useEffect(function () {\n    document.addEventListener(eventListener, function (event) {\n      var code = event.code;\n      var keyBinding = keyBindings[code];\n      if (keyBinding === undefined) return;\n      var condition = keyBinding.ctrl ? isCtrl(event) : true;\n      if (!condition) return;\n\n      if (event.target.type != \"text\") {\n        event.preventDefault();\n        keyBinding.fn(event);\n      }\n    }, false);\n    return function () {\n      return Object.keys(keyBindings).forEach(function (keyBinding) {\n        return document.removeEventListener(eventListener, keyBindings[keyBinding]);\n      });\n    };\n  }, []);\n};\n\n_s(useKeyBindings, \"B/Uyu/GVzqGkhMTV0NQlPFL4w40=\");","map":{"version":3,"sources":["/Users/nikivi/src/orgs/learn-anything/learn-anything/app/src/lib/key.js"],"names":["useState","useEffect","isCtrl","e","metaKey","ctrlKey","useKeyBindings","initialKeyBindings","eventListener","keyBindings","document","addEventListener","event","code","keyBinding","undefined","condition","ctrl","target","type","preventDefault","fn","Object","keys","forEach","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD;AAAA,SAAOA,CAAC,CAACC,OAAF,IAAaD,CAAC,CAACE,OAAtB;AAAA,CAAf,C,CAEA;;;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAGzB;AAAA;;AAAA,MAFHC,kBAEG,uEAFkB,EAElB;AAAA,MADHC,aACG,uEADa,SACb;;AAAA,kBACmBR,QAAQ,CAACO,kBAAD,CAD3B;AAAA,MACIE,WADJ;;AAGHR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,QAAQ,CAACC,gBAAT,CACEH,aADF,EAEE,UAACI,KAAD,EAAW;AAAA,UACDC,IADC,GACQD,KADR,CACDC,IADC;AAET,UAAMC,UAAU,GAAGL,WAAW,CAACI,IAAD,CAA9B;AACA,UAAIC,UAAU,KAAKC,SAAnB,EAA8B;AAC9B,UAAMC,SAAS,GAAGF,UAAU,CAACG,IAAX,GAAkBf,MAAM,CAACU,KAAD,CAAxB,GAAkC,IAApD;AACA,UAAI,CAACI,SAAL,EAAgB;;AAChB,UAAIJ,KAAK,CAACM,MAAN,CAAaC,IAAb,IAAqB,MAAzB,EAAiC;AAC/BP,QAAAA,KAAK,CAACQ,cAAN;AACAN,QAAAA,UAAU,CAACO,EAAX,CAAcT,KAAd;AACD;AACF,KAZH,EAaE,KAbF;AAgBA,WAAO;AAAA,aACLU,MAAM,CAACC,IAAP,CAAYd,WAAZ,EAAyBe,OAAzB,CAAiC,UAACV,UAAD;AAAA,eAC/BJ,QAAQ,CAACe,mBAAT,CAA6BjB,aAA7B,EAA4CC,WAAW,CAACK,UAAD,CAAvD,CAD+B;AAAA,OAAjC,CADK;AAAA,KAAP;AAID,GArBQ,EAqBN,EArBM,CAAT;AAsBD,CA5BM;;GAAMR,c","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst isCtrl = (e) => e.metaKey || e.ctrlKey\n\n// https://keycode.info\nexport const useKeyBindings = (\n  initialKeyBindings = {},\n  eventListener = \"keydown\"\n) => {\n  const [keyBindings] = useState(initialKeyBindings)\n\n  useEffect(() => {\n    document.addEventListener(\n      eventListener,\n      (event) => {\n        const { code } = event\n        const keyBinding = keyBindings[code]\n        if (keyBinding === undefined) return\n        const condition = keyBinding.ctrl ? isCtrl(event) : true\n        if (!condition) return\n        if (event.target.type != \"text\") {\n          event.preventDefault()\n          keyBinding.fn(event)\n        }\n      },\n      false\n    )\n\n    return () =>\n      Object.keys(keyBindings).forEach((keyBinding) =>\n        document.removeEventListener(eventListener, keyBindings[keyBinding])\n      )\n  }, [])\n}\n"]},"metadata":{},"sourceType":"module"}