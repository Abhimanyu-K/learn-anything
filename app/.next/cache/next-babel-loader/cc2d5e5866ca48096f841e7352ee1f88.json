{"ast":null,"code":"var _jsxFileName = \"/Users/nikivi/src/orgs/learn-anything/learn-anything/app/src/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport fetch from \"isomorphic-unfetch\";\nimport { DefaultSeo } from \"next-seo\";\nimport { withUrqlClient } from \"next-urql\";\nimport NextApp from \"next/app\";\nimport React from \"react\";\nimport { useKeyBindings } from \"../lib/key\";\nimport { getTheme, setDarkMode, setLightMode } from \"../lib/theme\";\nimport \"../styles.css\";\nconst title = \"Learn Anything\";\nconst description = \"Organize the world's knowledge, explore connections and curate learning paths\";\nconst SEO = {\n  title,\n  description,\n  canonical: \"https://learn-anything.xyz\",\n  openGraph: {\n    type: \"website\",\n    locale: \"en_GB\",\n    url: \"https://learn-anything.xyz\",\n    title,\n    description,\n    images: [{\n      url: \"/og.jpg\",\n      alt: title,\n      width: 1200,\n      height: 630\n    }]\n  },\n  twitter: {\n    handle: \"@learnanything_\",\n    site: \"@learnanything_\",\n    cardType: \"summary_large_image\"\n  }\n};\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  useKeyBindings({\n    KeyT: {\n      fn: () => {\n        if (getTheme() == \"light\") {\n          setDarkMode();\n        } else {\n          setLightMode();\n        }\n      }\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(DefaultSeo, _extends({}, SEO, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  })), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  })));\n};\n\nApp.getInitialProps = async ctx => {\n  const appProps = await NextApp.getInitialProps(ctx);\n  return _objectSpread({}, appProps);\n};\n\nexport default withUrqlClient(() => ({\n  url: \"https://learn-anything-db.herokuapp.com/v1/graphql\",\n  fetchOptions: {\n    headers: {\n      \"x-hasura-admin-secret\": process.env.hasuraSecret\n    }\n  },\n  fetch\n}))( // @ts-ignore\nApp);","map":{"version":3,"sources":["/Users/nikivi/src/orgs/learn-anything/learn-anything/app/src/pages/_app.tsx"],"names":["fetch","DefaultSeo","withUrqlClient","NextApp","React","useKeyBindings","getTheme","setDarkMode","setLightMode","title","description","SEO","canonical","openGraph","type","locale","url","images","alt","width","height","twitter","handle","site","cardType","App","Component","pageProps","KeyT","fn","getInitialProps","ctx","appProps","fetchOptions","headers","process","env","hasuraSecret"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAA6BC,cAA7B,QAAmD,WAAnD;AACA,OAAOC,OAAP,MAAkC,UAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,YAAhC,QAAoD,cAApD;AACA,OAAO,eAAP;AAEA,MAAMC,KAAK,GAAG,gBAAd;AACA,MAAMC,WAAW,GACf,+EADF;AAEA,MAAMC,GAAG,GAAG;AACVF,EAAAA,KADU;AAEVC,EAAAA,WAFU;AAGVE,EAAAA,SAAS,EAAE,4BAHD;AAIVC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,SADG;AAETC,IAAAA,MAAM,EAAE,OAFC;AAGTC,IAAAA,GAAG,EAAE,4BAHI;AAITP,IAAAA,KAJS;AAKTC,IAAAA,WALS;AAMTO,IAAAA,MAAM,EAAE,CACN;AACED,MAAAA,GAAG,EAAE,SADP;AAEEE,MAAAA,GAAG,EAAET,KAFP;AAGEU,MAAAA,KAAK,EAAE,IAHT;AAIEC,MAAAA,MAAM,EAAE;AAJV,KADM;AANC,GAJD;AAmBVC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,iBADD;AAEPC,IAAAA,IAAI,EAAE,iBAFC;AAGPC,IAAAA,QAAQ,EAAE;AAHH;AAnBC,CAAZ;;AA0BA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAwC;AAClDtB,EAAAA,cAAc,CAAC;AACbuB,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAE,MAAM;AACR,YAAIvB,QAAQ,MAAM,OAAlB,EAA2B;AACzBC,UAAAA,WAAW;AACZ,SAFD,MAEO;AACLC,UAAAA,YAAY;AACb;AACF;AAPG;AADO,GAAD,CAAd;AAYA,SACE,4BACE,MAAC,UAAD,eAAgBG,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,SAAD,eAAegB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,CAnBD;;AAqBAF,GAAG,CAACK,eAAJ,GAAsB,MAAOC,GAAP,IAAmC;AACvD,QAAMC,QAAQ,GAAG,MAAM7B,OAAO,CAAC2B,eAAR,CAAwBC,GAAxB,CAAvB;AAEA,2BACKC,QADL;AAGD,CAND;;AAQA,eAAe9B,cAAc,CAAC,OAAO;AACnCc,EAAAA,GAAG,EAAE,oDAD8B;AAEnCiB,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE;AACP,+BAAyBC,OAAO,CAACC,GAAR,CAAYC;AAD9B;AADG,GAFqB;AAOnCrC,EAAAA;AAPmC,CAAP,CAAD,CAAd,EASb;AACAyB,GAVa,CAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\"\nimport { DefaultSeo } from \"next-seo\"\nimport { NextUrqlAppContext, withUrqlClient } from \"next-urql\"\nimport NextApp, { AppProps } from \"next/app\"\nimport React from \"react\"\nimport { useKeyBindings } from \"../lib/key\"\nimport { getTheme, setDarkMode, setLightMode } from \"../lib/theme\"\nimport \"../styles.css\"\n\nconst title = \"Learn Anything\"\nconst description =\n  \"Organize the world's knowledge, explore connections and curate learning paths\"\nconst SEO = {\n  title,\n  description,\n  canonical: \"https://learn-anything.xyz\",\n  openGraph: {\n    type: \"website\",\n    locale: \"en_GB\",\n    url: \"https://learn-anything.xyz\",\n    title,\n    description,\n    images: [\n      {\n        url: \"/og.jpg\",\n        alt: title,\n        width: 1200,\n        height: 630,\n      },\n    ],\n  },\n  twitter: {\n    handle: \"@learnanything_\",\n    site: \"@learnanything_\",\n    cardType: \"summary_large_image\",\n  },\n}\n\nconst App = ({ Component, pageProps }: AppProps) => {\n  useKeyBindings({\n    KeyT: {\n      fn: () => {\n        if (getTheme() == \"light\") {\n          setDarkMode()\n        } else {\n          setLightMode()\n        }\n      },\n    },\n  })\n\n  return (\n    <>\n      <DefaultSeo {...SEO} />\n      <Component {...pageProps} />\n    </>\n  )\n}\n\nApp.getInitialProps = async (ctx: NextUrqlAppContext) => {\n  const appProps = await NextApp.getInitialProps(ctx)\n\n  return {\n    ...appProps,\n  }\n}\n\nexport default withUrqlClient(() => ({\n  url: \"https://learn-anything-db.herokuapp.com/v1/graphql\",\n  fetchOptions: {\n    headers: {\n      \"x-hasura-admin-secret\": process.env.hasuraSecret,\n    },\n  },\n  fetch,\n}))(\n  // @ts-ignore\n  App\n)\n"]},"metadata":{},"sourceType":"module"}