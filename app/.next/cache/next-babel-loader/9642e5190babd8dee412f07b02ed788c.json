{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nikivi/src/orgs/learn-anything/learn-anything/app/pages/_app.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { withUrqlClient } from \"next-urql\";\nimport NextApp from \"next/app\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar App = function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }\n  }));\n};\n\n_c = App;\n\nApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var appProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return NextApp.getInitialProps(ctx);\n\n          case 2:\n            appProps = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread({}, appProps));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withUrqlClient(function () {\n  return {\n    url: \"http://localhost:8080/v1/graphql\",\n    fetch: fetch\n  };\n})( // @ts-ignore\nApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");",
  "map": {
    "version": 3,
    "sources": [
      "/Users/nikivi/src/orgs/learn-anything/learn-anything/app/pages/_app.tsx"
    ],
    "names": [
      "React",
      "withUrqlClient",
      "NextApp",
      "fetch",
      "App",
      "Component",
      "pageProps",
      "getInitialProps",
      "ctx",
      "appProps",
      "url"
    ],
    "mappings": ";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAAmD,WAAnD;AACA,OAAOC,OAAP,MAAkC,UAAlC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAwC;AAAA,MAArCC,SAAqC,QAArCA,SAAqC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAClD,SAAO,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD;;KAAMF,G;;AAINA,GAAG,CAACG,eAAJ;AAAA,uEAAsB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGN,OAAO,CAACK,eAAR,CAAwBC,GAAxB,CADH;;AAAA;AACdC,YAAAA,QADc;AAAA,+DAIfA,QAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeR,cAAc,CAAC;AAAA,SAAO;AACnCS,IAAAA,GAAG,EAAE,kCAD8B;AAEnCP,IAAAA,KAAK,EAALA;AAFmC,GAAP;AAAA,CAAD,CAAd,EAIb;AACAC,GALa,CAAf",
    "sourcesContent": [
      "import React from \"react\";\nimport { withUrqlClient, NextUrqlAppContext } from \"next-urql\";\nimport NextApp, { AppProps } from \"next/app\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst App = ({ Component, pageProps }: AppProps) => {\n  return <Component {...pageProps} />;\n};\n\nApp.getInitialProps = async (ctx: NextUrqlAppContext) => {\n  const appProps = await NextApp.getInitialProps(ctx);\n\n  return {\n    ...appProps,\n  };\n};\n\nexport default withUrqlClient(() => ({\n  url: \"http://localhost:8080/v1/graphql\",\n  fetch,\n}))(\n  // @ts-ignore\n  App\n);\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
