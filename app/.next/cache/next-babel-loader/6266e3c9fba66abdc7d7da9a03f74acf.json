{"ast":null,"code":"// https://github.com/pacocoursey/paco/blob/master/lib/theme.ts\nimport { useCallback, useEffect } from \"react\";\nimport useSWR from \"swr\";\nexport const themeStorageKey = \"theme\";\nconst isServer = true;\nexport const getTheme = () => {\n  if (isServer) return \"dark\";\n  return localStorage.getItem(themeStorageKey) || \"dark\";\n};\nexport const setLightMode = () => {\n  try {\n    localStorage.setItem(themeStorageKey, \"light\");\n    document.documentElement.classList.add(\"light\");\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const setDarkMode = () => {\n  try {\n    localStorage.setItem(themeStorageKey, \"dark\");\n    document.documentElement.classList.remove(\"light\");\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst disableAnimation = () => {\n  const css = document.createElement(\"style\");\n  css.type = \"text/css\";\n  css.appendChild(document.createTextNode(`* {\n        -webkit-transition: none !important;\n        -moz-transition: none !important;\n        -o-transition: none !important;\n        -ms-transition: none !important;\n        transition: none !important;\n      }`));\n  document.head.appendChild(css);\n  return () => {\n    // Force restyle\n    ;\n\n    (() => window.getComputedStyle(css).opacity)();\n\n    document.head.removeChild(css);\n  };\n};\n\nconst useTheme = () => {\n  const {\n    data: theme,\n    mutate\n  } = useSWR(themeStorageKey, getTheme, {\n    initialData: getTheme()\n  });\n  const setTheme = useCallback(newTheme => {\n    mutate(newTheme, false);\n  }, [mutate]);\n  useEffect(() => {\n    const enable = disableAnimation();\n\n    if (theme === \"dark\") {\n      setDarkMode();\n    } else {\n      setLightMode();\n    }\n\n    enable();\n  }, [theme]);\n  return {\n    theme,\n    setTheme,\n    toggleTheme: () => setTheme(!theme || theme === \"dark\" ? \"light\" : \"dark\")\n  };\n};\n\nexport default useTheme;","map":{"version":3,"sources":["/Users/nikivi/src/orgs/learn-anything/learn-anything/app/src/lib/theme.ts"],"names":["useCallback","useEffect","useSWR","themeStorageKey","isServer","getTheme","localStorage","getItem","setLightMode","setItem","document","documentElement","classList","add","err","console","error","setDarkMode","remove","disableAnimation","css","createElement","type","appendChild","createTextNode","head","window","getComputedStyle","opacity","removeChild","useTheme","data","theme","mutate","initialData","setTheme","newTheme","enable","toggleTheme"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAIA,OAAO,MAAMC,eAAe,GAAG,OAAxB;AAEP,MAAMC,QAAQ,OAAd;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAa;AACnC,MAAID,QAAJ,EAAc,OAAO,MAAP;AACd,SAAQE,YAAY,CAACC,OAAb,CAAqBJ,eAArB,CAAD,IAAoD,MAA3D;AACD,CAHM;AAKP,OAAO,MAAMK,YAAY,GAAG,MAAM;AAChC,MAAI;AACFF,IAAAA,YAAY,CAACG,OAAb,CAAqBN,eAArB,EAAsC,OAAtC;AACAO,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuC,OAAvC;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAPM;AASP,OAAO,MAAMG,WAAW,GAAG,MAAM;AAC/B,MAAI;AACFX,IAAAA,YAAY,CAACG,OAAb,CAAqBN,eAArB,EAAsC,MAAtC;AACAO,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCM,MAAnC,CAA0C,OAA1C;AACD,GAHD,CAGE,OAAOJ,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAPM;;AASP,MAAMK,gBAAgB,GAAG,MAAM;AAC7B,QAAMC,GAAG,GAAGV,QAAQ,CAACW,aAAT,CAAuB,OAAvB,CAAZ;AACAD,EAAAA,GAAG,CAACE,IAAJ,GAAW,UAAX;AACAF,EAAAA,GAAG,CAACG,WAAJ,CACEb,QAAQ,CAACc,cAAT,CACG;;;;;;QADH,CADF;AAWAd,EAAAA,QAAQ,CAACe,IAAT,CAAcF,WAAd,CAA0BH,GAA1B;AAEA,SAAO,MAAM;AACX;AACA;;AAAC,KAAC,MAAMM,MAAM,CAACC,gBAAP,CAAwBP,GAAxB,EAA6BQ,OAApC;;AACDlB,IAAAA,QAAQ,CAACe,IAAT,CAAcI,WAAd,CAA0BT,GAA1B;AACD,GAJD;AAKD,CArBD;;AAuBA,MAAMU,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA;AAAf,MAA0B/B,MAAM,CAACC,eAAD,EAAkBE,QAAlB,EAA4B;AAChE6B,IAAAA,WAAW,EAAE7B,QAAQ;AAD2C,GAA5B,CAAtC;AAIA,QAAM8B,QAAQ,GAAGnC,WAAW,CACzBoC,QAAD,IAAqB;AACnBH,IAAAA,MAAM,CAACG,QAAD,EAAW,KAAX,CAAN;AACD,GAHyB,EAI1B,CAACH,MAAD,CAJ0B,CAA5B;AAOAhC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoC,MAAM,GAAGlB,gBAAgB,EAA/B;;AAEA,QAAIa,KAAK,KAAK,MAAd,EAAsB;AACpBf,MAAAA,WAAW;AACZ,KAFD,MAEO;AACLT,MAAAA,YAAY;AACb;;AAED6B,IAAAA,MAAM;AACP,GAVQ,EAUN,CAACL,KAAD,CAVM,CAAT;AAYA,SAAO;AACLA,IAAAA,KADK;AAELG,IAAAA,QAFK;AAGLG,IAAAA,WAAW,EAAE,MAAMH,QAAQ,CAAC,CAACH,KAAD,IAAUA,KAAK,KAAK,MAApB,GAA6B,OAA7B,GAAuC,MAAxC;AAHtB,GAAP;AAKD,CA7BD;;AA+BA,eAAeF,QAAf","sourcesContent":["// https://github.com/pacocoursey/paco/blob/master/lib/theme.ts\nimport { useCallback, useEffect } from \"react\"\nimport useSWR from \"swr\"\n\nexport type Theme = \"dark\" | \"light\"\n\nexport const themeStorageKey = \"theme\"\n\nconst isServer = typeof window === \"undefined\"\nexport const getTheme = (): Theme => {\n  if (isServer) return \"dark\"\n  return (localStorage.getItem(themeStorageKey) as Theme) || \"dark\"\n}\n\nexport const setLightMode = () => {\n  try {\n    localStorage.setItem(themeStorageKey, \"light\")\n    document.documentElement.classList.add(\"light\")\n  } catch (err) {\n    console.error(err)\n  }\n}\n\nexport const setDarkMode = () => {\n  try {\n    localStorage.setItem(themeStorageKey, \"dark\")\n    document.documentElement.classList.remove(\"light\")\n  } catch (err) {\n    console.error(err)\n  }\n}\n\nconst disableAnimation = () => {\n  const css = document.createElement(\"style\")\n  css.type = \"text/css\"\n  css.appendChild(\n    document.createTextNode(\n      `* {\n        -webkit-transition: none !important;\n        -moz-transition: none !important;\n        -o-transition: none !important;\n        -ms-transition: none !important;\n        transition: none !important;\n      }`\n    )\n  )\n  document.head.appendChild(css)\n\n  return () => {\n    // Force restyle\n    ;(() => window.getComputedStyle(css).opacity)()\n    document.head.removeChild(css)\n  }\n}\n\nconst useTheme = () => {\n  const { data: theme, mutate } = useSWR(themeStorageKey, getTheme, {\n    initialData: getTheme(),\n  })\n\n  const setTheme = useCallback(\n    (newTheme: Theme) => {\n      mutate(newTheme, false)\n    },\n    [mutate]\n  )\n\n  useEffect(() => {\n    const enable = disableAnimation()\n\n    if (theme === \"dark\") {\n      setDarkMode()\n    } else {\n      setLightMode()\n    }\n\n    enable()\n  }, [theme])\n\n  return {\n    theme,\n    setTheme,\n    toggleTheme: () => setTheme(!theme || theme === \"dark\" ? \"light\" : \"dark\"),\n  }\n}\n\nexport default useTheme\n"]},"metadata":{},"sourceType":"module"}